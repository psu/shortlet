class Queue{constructor(pace=300,queue=[]){this.pace=pace,this.queue=queue,this.timer=null}next(item){this.timer=setTimeout(()=>{this.timer=null,item.fn(),this.queue.length&&this.next(this.queue.shift())},item.delay)}add(fn,delay){delay=void 0!==delay?delay:this.pace,this.queue.push({fn:fn,delay:delay})}start(){this.queue.length&&this.next(this.queue.shift())}stop(){clearTimeout(this.timer)}reset(){this.stop(),this.queue=[]}}class Shortlet extends Queue{constructor(...args){super(...args)}actions={goto:url=>{window.location=url},goto_append:url=>{window.location+=url},click:selector=>{document.querySelector(selector).click()},click_all:selector=>{document.querySelectorAll(selector).forEach(o=>{o.click()})},input:text=>{console.log("input:",text)},blur:()=>{null!==document.querySelector(":focus")&&document.querySelector(":focus").blur()},input_focus:selector=>{null!==document.querySelector(":focus")&&document.querySelector(":focus").blur(),document.querySelector(selector).focus()},input_select:selector=>{document.querySelector(selector).select()},input_value:(selector,text)=>{document.querySelector(selector).value=text},dispatch_enter:selector=>{document.querySelector(selector).dispatchEvent(new KeyboardEvent("keydown",{code:"Enter",key:"Enter",charCode:13,keyCode:13,view:window,bubbles:!0}))},dispatch_space:selector=>{document.querySelector(selector).focus(),document.querySelector(selector).dispatchEvent(new KeyboardEvent("keydown",{which:32,charCode:32,keyCode:32,view:window,bubbles:!0}))},reveal_data:(data,selector,target,style)=>{document.querySelectorAll(selector).forEach(el=>{const output=document.createElement("span");output.textContent=el.dataset[data],output.setAttribute("style",style),el.querySelector(target).appendChild(output)})}};run(actions=[]){Array.isArray(actions)||(actions=[actions]),this.addActions(actions),this.start()}addActions(actions){actions.forEach(a=>{this.addSingleAction(a)})}addSingleAction(action){let fn=()=>{};"function"==typeof this.actions[action.do]&&(fn=()=>{try{this.actions[action.do](...action.with)}catch(e){if(void 0!==action.fallback)try{this.actions[action.do](...action.fallback)}catch(e){this.logError(e,`${action.do} (fallback)`,action.fallback)}else this.logError(e,action.do,action.with)}}),this.add(fn,action.delay)}logError(e="",action="",args=[]){with_args=0!==args.length?` with '${args.join(", ")}'`:"",console.log(`Shortlet:  Error doing '${action}'${with_args}\n${e}`)}}