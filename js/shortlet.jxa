#!/usr/bin/osascript -l JavaScript
ObjC.import('stdlib')

function run(argv) {
  const command = argv[0]
  const input = argv[1]
  let code, list, app
  try {
    code = $.getenv('source_code')
    list = $.getenv('source_shortlets')
    app = $.getenv('focusedapp')
  } catch (err) {
    console.log('ShortletEnvironment: Could not load environment variables.')
    $.exit(1)
  }
  var shortlet_env = new ShortletEnvironment(app, list, code)
  return shortlet_env.commands[command](input)
}

class ShortletEnvironment {
  constructor(browser, shortlets, source_code) {
    this.browser = browser
    this.source_code = source_code
    this.shortlets = shortlets

    this.tab = Application(this.browser).windows[0].activeTab
    this.load()
  }
  get url() {
    return this.browser === 'company.thebrowser.Browser'
      ? this.tab.properties().url
      : this.tab.url()
  }
  load() {
    const list = JSON.parse(
      this.tab.execute({
        javascript: `try{window.ShortletList}catch(e){console.log('ShortletEnvironment: Not loaded')}`,
      })
    )
    if (list !== null) {
      this.loaded = list
    } else {
      this.tab.execute({
        javascript: `
          console.log('ShortletEnvironment: Loading')
          ${this.source_code}
          window.ShortletList = ShortletRunner.load(${this.shortlets})`,
      })
      this.load()
    }
  }
  commands = {
    execute: id => {
      let obj
      try {
        obj = this.loaded.filter(o => o.id === id)[0]
      } catch (e) {
        console.log(`ShortletEnvironment: No shortlets loaded for id: ${id}`)
        return
      }
      return this.tab.execute({
        javascript: `ShortletRunner.run(${JSON.stringify(obj)})`,
      })
    },
    filter_list: placeholder => {
      if (this.loaded.length > 0) {
        return JSON.stringify({
          items: this.loaded.map(s => ({
            title: s.title,
            uid: this.url + '_' + s.id,
            id: s.id,
            subtitle: `Executes ${s.actions.length} actions`,
            arg: s.id,
          })),
        })
      }
      return JSON.stringify({ items: [{ title: `No Shortlets found for '${this.url}'` }] })
    },
  }
}
