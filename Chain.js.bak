// Chain "API" object
const Chain = {
  config: { pace: 300 },
  data: {},
  // Actions
  _goto: function (location, fn) {
    return (...args) => {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          console.log('location location', location);
          resolve(fn(...args));
        }, this.config.pace);
      });
    };
  },
  // Primary functions
  init: function (data) {
    this.data = data;
    return this;
  },
  run: function (data = {}) {
    return new Promise((resolve, reject) => {
      this.data = { ...this.data, ...data };
      resolve(this.data);
    });
  },
  // API functions used to define steps
  _do: function (fn) {
    return (...args) => {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve(fn(...args));
        }, this.config.pace);
      });
    };
  },
  _delay: function (ms, fn) {
    return (...args) => {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve(fn(...args));
        }, ms);
      });
    };
  },
  _now: function (fn) {
    return (...args) => {
      return new Promise((resolve, reject) => {
        resolve(fn(...args));
      });
    };
  },
};
export default Chain;
